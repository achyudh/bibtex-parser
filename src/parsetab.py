
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AT NEWLINE COMMENT WHITESPACE JUNK NUMBER NAME LBRACE RBRACE LPAREN RPAREN EQUALS HASH COMMA QUOTE STRINGbibfile : entriesentries : entry entries\n               | entryentry : AT NAME LBRACE key COMMA fields RBRACEfields : field COMMA fields\n              | fieldfield : NAME EQUALS LBRACE value RBRACEvalue : STRING\n             | NUMBER\n             | NAMEkey : NAME\n           | NUMBER'
    
_lr_action_items = {'$end':([1,3,4,6,16,],[-1,0,-3,-2,-4,]),'NAME':([2,7,11,17,18,],[5,8,12,12,21,]),'LBRACE':([5,15,],[7,18,]),'NUMBER':([7,18,],[9,22,]),'RBRACE':([13,14,19,20,21,22,23,24,],[16,-6,-5,24,-10,-9,-8,-7,]),'AT':([0,4,16,],[2,2,-4,]),'STRING':([18,],[23,]),'EQUALS':([12,],[15,]),'COMMA':([8,9,10,14,24,],[-11,-12,11,17,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'entries':([0,4,],[1,6,]),'value':([18,],[20,]),'field':([11,17,],[14,14,]),'fields':([11,17,],[13,19,]),'bibfile':([0,],[3,]),'key':([7,],[10,]),'entry':([0,4,],[4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bibfile","S'",1,None,None,None),
  ('bibfile -> entries','bibfile',1,'p_bibfile','bibtex_parser.py',59),
  ('entries -> entry entries','entries',2,'p_entries','bibtex_parser.py',64),
  ('entries -> entry','entries',1,'p_entries','bibtex_parser.py',65),
  ('entry -> AT NAME LBRACE key COMMA fields RBRACE','entry',7,'p_entry','bibtex_parser.py',72),
  ('fields -> field COMMA fields','fields',3,'p_fields','bibtex_parser.py',85),
  ('fields -> field','fields',1,'p_fields','bibtex_parser.py',86),
  ('field -> NAME EQUALS LBRACE value RBRACE','field',5,'p_field','bibtex_parser.py',93),
  ('value -> STRING','value',1,'p_value','bibtex_parser.py',97),
  ('value -> NUMBER','value',1,'p_value','bibtex_parser.py',98),
  ('value -> NAME','value',1,'p_value','bibtex_parser.py',99),
  ('key -> NAME','key',1,'p_key','bibtex_parser.py',103),
  ('key -> NUMBER','key',1,'p_key','bibtex_parser.py',104),
]
